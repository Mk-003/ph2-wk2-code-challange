{"ast":null,"code":"var _jsxFileName = \"/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/BotForm.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//creating Bots\nfunction BotForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  // Add function to handle submissions\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"name:\", name);\n    console.log(\"category:\", category);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    const botData = {\n      name: name,\n      category: category,\n      isInCart: false\n    };\n    fetch(\"http://localhost:3000/bots\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(botData)\n    }).then(r => r.json()).then(newBot => onAddBot(newBot));\n  }\n  return (\n    /*#__PURE__*/\n    // Set up the form to call handleSubmit when the form is submitted\n    _jsxDEV(\"form\", {\n      className: \"NewItem\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  );\n}\n_s(BotForm, \"AyvF3tOPArzes4LusL0xalfQJsU=\");\n_c = BotForm;\nexport default BotForm;\nvar _c;\n$RefreshReg$(_c, \"BotForm\");","map":{"version":3,"names":["BotForm","_s","name","setName","useState","category","setCategory","handleSubmit","e","preventDefault","console","log","botData","isInCart","fetch","method","headers","body","JSON","stringify","then","r","json","newBot","onAddBot","_jsxDEV","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/BotForm.js"],"sourcesContent":["\n//creating Bots\nfunction BotForm() {\n    const [name, setName] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n  \n    // Add function to handle submissions\n    function handleSubmit(e) {\n      e.preventDefault();\n      console.log(\"name:\", name);\n      console.log(\"category:\", category);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const botData = {\n          name: name,\n          category: category,\n          isInCart: false,\n        };\n        fetch(\"http://localhost:3000/bots\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(botData),\n        })\n          .then((r) => r.json())\n          .then((newBot) => onAddBot(newBot));\n      }\n  \n    return (\n      // Set up the form to call handleSubmit when the form is submitted\n      <form className=\"NewItem\" onSubmit={handleSubmit}>\n        {/** ...form inputs here */}\n      </form>\n    );\n  }\nexport default BotForm;"],"mappings":";;;AACA;AACA,SAASA,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,SAASG,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAET,IAAI,CAAC;IAC1BQ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,QAAQ,CAAC;EACpC;EAEA,SAASE,YAAYA,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMG,OAAO,GAAG;MACdV,IAAI,EAAEA,IAAI;MACVG,QAAQ,EAAEA,QAAQ;MAClBQ,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,CAAC,4BAA4B,EAAE;MAClCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;IAC9B,CAAC,CAAC,CACCQ,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAAEG,MAAM,IAAKC,QAAQ,CAACD,MAAM,CAAC,CAAC;EACvC;EAEF;IAAA;IACE;IACAE,OAAA;MAAMC,SAAS,EAAC,SAAS;MAACC,QAAQ,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3C;EAAC;AAEX;AAAC9B,EAAA,CAnCMD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}