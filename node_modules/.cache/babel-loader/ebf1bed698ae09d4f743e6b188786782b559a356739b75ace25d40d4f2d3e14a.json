{"ast":null,"code":"var _jsxFileName = \"/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [yourBotArmy, setYourBotArmy] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/bots').then(response => response.json()).then(data => {\n      setBots(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  //add bot to army\n  const addToYourBotArmy = botId => {\n    const selectedBot = bots.find(bot => bot.id === botId);\n    if (selectedBot && !yourBotArmy.includes(selectedBot)) {\n      setYourBotArmy([...yourBotArmy, selectedBot]);\n    }\n  };\n\n  //releaseBot\n  const releaseBot = botId => {\n    const updatedArmy = yourBotArmy.filter(bot => bot.id !== botId);\n    setYourBotArmy(updatedArmy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TEAM MAMIO \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      addToYourBotArmy: addToYourBotArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: yourBotArmy,\n      releaseBot: releaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0ck7TW7BwKTqiE6X08zAOkONSCQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","yourBotArmy","setYourBotArmy","fetch","then","response","json","data","catch","error","console","addToYourBotArmy","botId","selectedBot","find","bot","id","includes","releaseBot","updatedArmy","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React,{ useEffect,useState } from 'react';  \nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nfunction App() {\n\nconst [bots,setBots]= useState([]);\nconst [yourBotArmy, setYourBotArmy] = useState([]);\n\n  useEffect(() =>{\n    fetch('http://localhost:3000/bots')\n    .then(response => response.json())\n    .then((data) =>{\n      setBots(data);\n    })\n    .catch((error)=>{\n      console.error('Error fetching data:',error);\n    })\n  },[]);\n\n//add bot to army\nconst addToYourBotArmy = (botId) => {\n  const selectedBot = bots.find(bot => bot.id === botId);\n  if (selectedBot && !yourBotArmy.includes(selectedBot)) {\n      setYourBotArmy([...yourBotArmy, selectedBot]);\n  }\n};\n\n//releaseBot\nconst releaseBot = (botId) => {\n  const updatedArmy = yourBotArmy.filter(bot => bot.id !== botId);\n  setYourBotArmy(updatedArmy);};\n\n  return (\n    <div className=\"App\">\n      <h1>TEAM MAMIO </h1>\n      <BotCollection bots={bots} addToYourBotArmy={addToYourBotArmy} />\n      <YourBotArmy bots={yourBotArmy} releaseBot={releaseBot}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAChD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAK;IACbY,KAAK,CAAC,4BAA4B,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAI;MACbP,OAAO,CAACO,IAAI,CAAC;IACf,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAG;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAACA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;;EAEP;EACA,MAAME,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,WAAW,GAAGd,IAAI,CAACe,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,KAAK,CAAC;IACtD,IAAIC,WAAW,IAAI,CAACZ,WAAW,CAACgB,QAAQ,CAACJ,WAAW,CAAC,EAAE;MACnDX,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEY,WAAW,CAAC,CAAC;IACjD;EACF,CAAC;;EAED;EACA,MAAMK,UAAU,GAAIN,KAAK,IAAK;IAC5B,MAAMO,WAAW,GAAGlB,WAAW,CAACmB,MAAM,CAACL,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,KAAK,CAAC;IAC/DV,cAAc,CAACiB,WAAW,CAAC;EAAC,CAAC;EAE7B,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAA0B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB9B,OAAA,CAACH,aAAa;MAACM,IAAI,EAAEA,IAAK;MAACY,gBAAgB,EAAEA;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjE9B,OAAA,CAACF,WAAW;MAACK,IAAI,EAAEE,WAAY;MAACiB,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAAC5B,EAAA,CApCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}