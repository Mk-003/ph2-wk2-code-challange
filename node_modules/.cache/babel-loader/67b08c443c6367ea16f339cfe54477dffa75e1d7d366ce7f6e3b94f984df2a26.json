{"ast":null,"code":"var _jsxFileName = \"/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/BotCollection.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//DELETE BOTS COMPLETELY\nconst [bots, setBots] = useState([]); // Initial bot state\n\nconst deleteBot = botId => {\n  // Make an API call to delete the bot from the backend\n  fetch(`/api/bots/${botId}`, {\n    method: 'DELETE'\n  }).then(response => {\n    if (response.ok) {\n      // If successful, update the state to remove the deleted bot\n      setBots(bots.filter(bot => bot.id !== botId));\n    } else {\n      // Handle error\n      console.error('Failed to delete bot');\n    }\n  }).catch(error => {\n    // Handle error\n    console.error('Error:', error);\n  });\n};\nconst BotCollection = ({\n  bots\n}) => {\n  const groupedBots = bots.reduce((acc, bot) => {\n    if (!acc[bot.bot_class]) {\n      acc[bot.bot_class] = [];\n    }\n    acc[bot.bot_class].push(bot);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Bots Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-container\",\n      children: Object.entries(groupedBots).map(([bot_class, botsGroup]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Bot Class: \", bot_class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: botsGroup.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: bot.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ID:\", bot.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name: \", bot.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Health: \", bot.health]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Armor: \", bot.armor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Bot_class: \", bot.bot_class]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: bot.avatar_url,\n              alt: bot.name,\n              style: {\n                width: '100px',\n                height: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 1\n            }, this)]\n          }, bot.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, bot_class, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["bots","setBots","useState","deleteBot","botId","fetch","method","then","response","ok","filter","bot","id","console","error","catch","BotCollection","groupedBots","reduce","acc","bot_class","push","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","entries","map","botsGroup","title","name","health","armor","src","avatar_url","alt","style","width","height","_c","$RefreshReg$"],"sources":["/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/BotCollection.js"],"sourcesContent":["\n//DELETE BOTS COMPLETELY\nconst [bots, setBots] = useState([]); // Initial bot state\n\nconst deleteBot = (botId) => {\n    // Make an API call to delete the bot from the backend\n    fetch(`/api/bots/${botId}`, {\n        method: 'DELETE'\n    })\n    .then(response => {\n        if (response.ok) {\n            // If successful, update the state to remove the deleted bot\n            setBots(bots.filter(bot => bot.id !== botId));\n        } else {\n            // Handle error\n            console.error('Failed to delete bot');\n        }\n    })\n    .catch(error => {\n        // Handle error\n        console.error('Error:', error);\n    });\n};\n\n    const BotCollection = ({ bots }) => {\n\n\n\n        const groupedBots = bots.reduce((acc, bot) => {\n          if (!acc[bot.bot_class]) {\n            acc[bot.bot_class] = [];\n          }\n          acc[bot.bot_class].push(bot);\n          return acc;\n        }, {});\n\n    return( \n        <div>\n            <h3>Bots Collection</h3>\n            <div className=\"bot-container\">\n            {Object.entries(groupedBots).map(([bot_class, botsGroup]) => (\n        <div key={bot_class}  className=\"bot-group\">\n          <h4>Bot Class: {bot_class}</h4>\n\n            <ol>\n                {botsGroup.map(bot=>(\n                    <li key={bot.id} >\n                        <h2>{bot.title}</h2>\n                        <p>ID:{bot.id}</p>\n<p>Name: {bot.name}</p>\n<p>Health: {bot.health}</p>\n<p>Armor: {bot.armor}</p>\n<p>Bot_class: {bot.bot_class}</p>\n<img src={bot.avatar_url} alt={bot.name} style={{width: '100px', height: '200px'}} />\n                    </li>\n                ))}\n            </ol>\n        </div>\n             ) )}\n             </div>\n             </div>\n    );\n};\nexport default BotCollection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}