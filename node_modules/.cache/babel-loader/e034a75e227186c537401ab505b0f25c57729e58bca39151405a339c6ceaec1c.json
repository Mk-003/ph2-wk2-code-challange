{"ast":null,"code":"var _jsxFileName = \"/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/BotForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotForm({\n  onAddBot\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const botData = {\n      name: name,\n      category: category,\n      isInCart: false\n    };\n    fetch(\"http://localhost:3000/bots\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(botData)\n    }).then(r => r.json()).then(newBot => {\n      onAddBot(newBot);\n      setName(\"\");\n      setCategory(\"\");\n    }).catch(error => {\n      console.error('Error adding bot:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"NewItem\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Category\",\n      value: category,\n      onChange: e => setCategory(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_s(BotForm, \"AyvF3tOPArzes4LusL0xalfQJsU=\");\n_c = BotForm;\nexport default BotForm;\nvar _c;\n$RefreshReg$(_c, \"BotForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BotForm","onAddBot","_s","name","setName","category","setCategory","handleSubmit","e","preventDefault","botData","isInCart","fetch","method","headers","body","JSON","stringify","then","r","json","newBot","catch","error","console","className","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/BotForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction BotForm({ onAddBot }) {\n    const [name, setName] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n  \n    function handleSubmit(e) {\n        e.preventDefault();\n        const botData = {\n          name: name,\n          category: category,\n          isInCart: false,\n        };\n        fetch(\"http://localhost:3000/bots\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(botData),\n        })\n          .then((r) => r.json())\n          .then((newBot) => {\n            onAddBot(newBot);\n            setName(\"\");\n            setCategory(\"\");\n          })\n          .catch((error) => {\n            console.error('Error adding bot:', error);\n          });\n    }\n  \n    return (\n      <form  className=\"NewItem\" onSubmit={handleSubmit}>\n        {/* Input fields */}\n        <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n        />\n        <input\n            type=\"text\"\n            placeholder=\"Category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n        />\n        <button type=\"submit\">Add Bot</button>\n      </form>\n    );\n}\n\nexport default BotForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASU,YAAYA,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG;MACdP,IAAI,EAAEA,IAAI;MACVE,QAAQ,EAAEA,QAAQ;MAClBM,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,CAAC,4BAA4B,EAAE;MAClCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;IAC9B,CAAC,CAAC,CACCQ,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAAEG,MAAM,IAAK;MAChBpB,QAAQ,CAACoB,MAAM,CAAC;MAChBjB,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,CACDgB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACR;EAEA,oBACExB,OAAA;IAAO0B,SAAS,EAAC,SAAS;IAACC,QAAQ,EAAEnB,YAAa;IAAAoB,QAAA,gBAEhD5B,OAAA;MACI6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAE3B,IAAK;MACZ4B,QAAQ,EAAGvB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrC,OAAA;MACI6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAGvB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFrC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEb;AAAClC,EAAA,CA/CQF,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AAiDhB,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}