{"ast":null,"code":"var _jsxFileName = \"/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/BotCollection.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = ({\n  bots\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Bots Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"hj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: botsGroup.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: bot.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID:\", bot.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", bot.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Health: \", bot.health]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Armor: \", bot.armor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bot_class: \", bot.bot_class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bot.avatar_url,\n          alt: bot.name,\n          style: {\n            width: '100px',\n            height: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 26\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["BotCollection","bots","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","botsGroup","map","bot","title","id","name","health","armor","bot_class","src","avatar_url","alt","style","width","height","_c","$RefreshReg$"],"sources":["/home/mj/system/phase2/Code Challenges/Code 2/ph2-wk2-code-challange/src/BotCollection.js"],"sourcesContent":["\n\n    const BotCollection = ({ bots }) => {\n\n\n    return( \n        <div>\n            <h3>Bots Collection</h3>\n    \n          <h4>hj</h4>\n\n            <ol>\n                {botsGroup.map(bot=>(\n                    <li key={bot.id} >\n                        <h2>{bot.title}</h2>\n                        <p>ID:{bot.id}</p>\n                        <p>Name: {bot.name}</p>\n                         <p>Health: {bot.health}</p>\n                         <p>Armor: {bot.armor}</p>\n                         <p>Bot_class: {bot.bot_class}</p>\n                         <img src={bot.avatar_url} alt={bot.name} style={{width: '100px', height: '200px'}} />\n                    </li>\n                ))}\n            </ol>\n        </div>\n    \n\n)};\nexport default BotCollection;"],"mappings":";;AAEI,MAAMA,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAGpC,oBACIC,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAAC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1BL,OAAA;MAAAC,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAETL,OAAA;MAAAC,QAAA,EACKK,SAAS,CAACC,GAAG,CAACC,GAAG,iBACdR,OAAA;QAAAC,QAAA,gBACID,OAAA;UAAAC,QAAA,EAAKO,GAAG,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBL,OAAA;UAAAC,QAAA,GAAG,KAAG,EAACO,GAAG,CAACE,EAAE;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBL,OAAA;UAAAC,QAAA,GAAG,QAAM,EAACO,GAAG,CAACG,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBL,OAAA;UAAAC,QAAA,GAAG,UAAQ,EAACO,GAAG,CAACI,MAAM;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BL,OAAA;UAAAC,QAAA,GAAG,SAAO,EAACO,GAAG,CAACK,KAAK;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBL,OAAA;UAAAC,QAAA,GAAG,aAAW,EAACO,GAAG,CAACM,SAAS;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCL,OAAA;UAAKe,GAAG,EAAEP,GAAG,CAACQ,UAAW;UAACC,GAAG,EAAET,GAAG,CAACG,IAAK;UAACO,KAAK,EAAE;YAACC,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAO;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAPjFG,GAAG,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGb,CAAC;AAACgB,EAAA,GAzBOvB,aAAa;AA0BvB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}